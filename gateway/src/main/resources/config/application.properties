spring.application.name=gateway
server.port=8803

#direct use serviceId as context path
#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true

spring.cloud.gateway.routes[0].id=demo
spring.cloud.gateway.routes[0].uri=lb://demo
spring.cloud.gateway.routes[0].predicates[0]=Path=/mvc/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[1].id=demo2
spring.cloud.gateway.routes[1].uri=lb://demo2
spring.cloud.gateway.routes[1].predicates[0]=Path=/jersey/**
spring.cloud.gateway.routes[1].predicates[1]=After=2019-04-20T17:42:47.789-07:00[America/Denver]
#spring.cloud.gateway.routes[1].predicates[2]=Header=X-Request-Id, \\d+
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[1].filters[1].name=RequestRateLimiter
spring.cloud.gateway.routes[1].filters[1].args[key-resolver]=#{@hostAddressKeyResolver}
spring.cloud.gateway.routes[1].filters[1].args[redis-rate-limiter.replenishRate]=1
spring.cloud.gateway.routes[1].filters[1].args[redis-rate-limiter.burstCapacity]=3
spring.cloud.gateway.routes[1].filters[2]=AddRequestHeader=X-Request-Foo, Bar
spring.cloud.gateway.routes[1].filters[3]=My=false
spring.cloud.gateway.routes[1].filters[4].name=Hystrix
spring.cloud.gateway.routes[1].filters[4].args[name]=fallbackcmd
spring.cloud.gateway.routes[1].filters[4].args[fallbackUri]=forward:/fallback

hystrix.command.fallbackcmd.execution.isolation.thread.timeoutInMilliseconds=5000

info.version=@project.version@
info.summary=\u8FD9\u662F\u7F51\u5173
info.developers=\u4E01\u6D69

spring.redis.host=192.168.1.159
spring.redis.port=6379
spring.redis.database=1